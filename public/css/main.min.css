*{-webkit-box-sizing:border-box;box-sizing:border-box}img{max-width:700px}body{font:16px/1.5 Georgia,"Times New Roman",Times,serif;background:url(../img/e.jpg) no-repeat center/cover}.title{text-transform:uppercase}.news{list-style:none;padding:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}@supports (-webkit-appearance:none){body{background:url(../img/e.webp) no-repeat center/cover}}@media (max-width:700px){body{color:#fff;background-color:#000}.title{text-align:left}.news{display:block}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsIm1haW4ubWluLmNzcyIsIm1haW4uY3NzIiwiY2h1bmtzL3RpdGxlLnNjc3MiLCJjaHVua3MvbmV3cy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLEMsQ0FDRSw2QixDQ0RBLHFCLENESUYsRyxDQUNFLGUsQ0FTRixJLENBQ0UsbUQsQ0FDQSxtRCxDRUxGLE0sQ0ZGRSx3QixDQ09GLEssQ0NBRSxlLENBQ0YsUyxDREVFLG1CLENFckJGLG1CLENBQ0UsWSxDRHNCRixzQixDRlpFLG1CLENHWEYsMEIsQ0Q0QkEsV0FBQSx1QixFREVFLEksQ0c5QkYsc0QsQUhtQ0EseUJHaENFLEksQ0FDQSxVLENIa0NFLHFCLENEM0JGLE0sQ0lYRixlLENGd0NBLEssQ0FDQSxlIiwiZmlsZSI6Im1haW4ubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiRiYXNlLWZvbnQtc2l6ZTogMTZweDtcblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmltZyB7XG4gIG1heC13aWR0aDogNzAwcHg7XG59XG5cbkBtaXhpbiBwaCB7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3MDBweCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbmJvZHkge1xuICBmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZTtcbiAgZm9udC1mYW1pbHk6IEdlb3JnaWEsIFwiVGltZXMgTmV3IFJvbWFuXCIsIFRpbWVzLCBzZXJpZjtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL2UuanBnXCIpIG5vLXJlcGVhdCBjZW50ZXIvY292ZXI7XG5cbiAgQGluY2x1ZGUgcGgge1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG4gIH1cbn1cblxuQGltcG9ydCBcImNodW5rcy90aXRsZS5zY3NzXCI7XG5AaW1wb3J0IFwiY2h1bmtzL25ld3Muc2Nzc1wiO1xuIiwiKiB7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuaW1nIHtcbiAgbWF4LXdpZHRoOiA3MDBweDtcbn1cblxuYm9keSB7XG4gIGZvbnQ6IDE2cHgvMS41IEdlb3JnaWEsIFwiVGltZXMgTmV3IFJvbWFuXCIsIFRpbWVzLCBzZXJpZjtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL2UuanBnXCIpIG5vLXJlcGVhdCBjZW50ZXIvY292ZXI7XG59XG5cbi50aXRsZSB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi5uZXdzIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1wYWNrOiBzdGFydDtcbiAgLW1zLWZsZXgtcGFjazogc3RhcnQ7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbn1cblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSkge1xuICBib2R5IHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWcvZS53ZWJwXCIpIG5vLXJlcGVhdCBjZW50ZXIvY292ZXI7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KSB7XG4gIGJvZHkge1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG4gIH1cblxuICAudGl0bGUge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gIH1cblxuICAubmV3cyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSkge1xuXG59XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbTFoYVc0dWMyTnpjeUlzSW0xaGFXNHVZM056SWl3aVkyaDFibXR6TDNScGRHeGxMbk5qYzNNaUxDSmphSFZ1YTNNdmJtVjNjeTV6WTNOeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVVkJPMFZCUTBVc09FSkJRVUU3VlVGQlFTeHpRa0ZCUVR0QlEwUkdPenRCUkVsQk8wVkJRMFVzWjBKQlFVRTdRVU5FUmpzN1FVUlZRVHRGUVVORkxHVkJha0psTzBWQmEwSm1MSEZFUVVGQk8wVkJRMEVzWjBKQlFVRTdSVUZEUVN4elJFRkJRVHRCUTFCR08wRkVSa1U3UlVGTFJqdEpRVTlKTEZkQlFVRTdTVUZEUVN4elFrRkJRVHRGUTA1R08wRkJRMFk3TzBGRGJrSkJPMFZCUTBVc2VVSkJRVUU3UVVSelFrWTdRVVJhUlR0RlJWaEdPMGxCU1Vrc1owSkJRVUU3UlVSMVFrWTdRVUZEUmpzN1FVVTFRa0U3UlVGRFJTeG5Ra0ZCUVR0RlFVTkJMRlZCUVVFN1JVRkRRU3h2UWtGQlFUdEZRVUZCTEc5Q1FVRkJPMFZCUVVFc1lVRkJRVHRGUVVOQkxIVkNRVUZCTzAxQlFVRXNiMEpCUVVFN1ZVRkJRU3d5UWtGQlFUdEJSaXRDUmp0QlJIaENSVHRGUjFoR08wbEJUMGtzWTBGQlFUdEZSbWREUmp0QlFVTkdPMEZCUTBFN1FVRkRRU3hMUVVGTExITkVRVUZ6UkR0QlFVTXpSRHM3UTBGRlF6czdRVUZGUkRzN1FVRkZRVHM3UVVGRlFTSXNJbVpwYkdVaU9pSnRZV2x1TG1OemN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJaVJpWVhObExXWnZiblF0YzJsNlpUb2dNVFp3ZUR0Y2JseHVLaUI3WEc0Z0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3WEc1OVhHNWNibWx0WnlCN1hHNGdJRzFoZUMxM2FXUjBhRG9nTnpBd2NIZzdYRzU5WEc1Y2JrQnRhWGhwYmlCd2FDQjdYRzRnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBM01EQndlQ2tnZTF4dUlDQWdJRUJqYjI1MFpXNTBPMXh1SUNCOVhHNTlYRzVjYm1KdlpIa2dlMXh1SUNCbWIyNTBMWE5wZW1VNklDUmlZWE5sTFdadmJuUXRjMmw2WlR0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUVkbGIzSm5hV0VzSUZ3aVZHbHRaWE1nVG1WM0lGSnZiV0Z1WENJc0lGUnBiV1Z6TENCelpYSnBaanRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREV1TlR0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nZFhKc0tGd2lMaTR2YVcxbkwyVXVhbkJuWENJcElHNXZMWEpsY0dWaGRDQmpaVzUwWlhJdlkyOTJaWEk3WEc1Y2JpQWdRR2x1WTJ4MVpHVWdjR2dnZTF4dUlDQWdJR052Ykc5eU9pQWpabVptTzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ013TURBN1hHNGdJSDFjYm4xY2JseHVRR2x0Y0c5eWRDQmNJbU5vZFc1cmN5OTBhWFJzWlM1elkzTnpYQ0k3WEc1QWFXMXdiM0owSUZ3aVkyaDFibXR6TDI1bGQzTXVjMk56YzF3aU8xeHVJaXdpS2lCN1hHNGdJR0p2ZUMxemFYcHBibWM2SUdKdmNtUmxjaTFpYjNnN1hHNTlYRzVjYm1sdFp5QjdYRzRnSUcxaGVDMTNhV1IwYURvZ056QXdjSGc3WEc1OVhHNWNibUp2WkhrZ2UxeHVJQ0JtYjI1MExYTnBlbVU2SURFMmNIZzdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQkhaVzl5WjJsaExDQmNJbFJwYldWeklFNWxkeUJTYjIxaGJsd2lMQ0JVYVcxbGN5d2djMlZ5YVdZN1hHNGdJR3hwYm1VdGFHVnBaMmgwT2lBeExqVTdYRzRnSUdKaFkydG5jbTkxYm1RNklIVnliQ2hjSWk0dUwybHRaeTlsTG1wd1oxd2lLU0J1YnkxeVpYQmxZWFFnWTJWdWRHVnlMMk52ZG1WeU8xeHVmVnh1UUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURjd01IQjRLU0I3WEc0Z0lHSnZaSGtnZTF4dUlDQWdJR052Ykc5eU9pQWpabVptTzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ013TURBN1hHNGdJSDFjYm4xY2JseHVMblJwZEd4bElIdGNiaUFnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVHRjYm4xY2JrQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQTNNREJ3ZUNrZ2UxeHVJQ0F1ZEdsMGJHVWdlMXh1SUNBZ0lIUmxlSFF0WVd4cFoyNDZJR3hsWm5RN1hHNGdJSDFjYm4xY2JseHVMbTVsZDNNZ2UxeHVJQ0JzYVhOMExYTjBlV3hsT2lCdWIyNWxPMXh1SUNCd1lXUmthVzVuT2lBd08xeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR1pzWlhndGMzUmhjblE3WEc1OVhHNUFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dOekF3Y0hncElIdGNiaUFnTG01bGQzTWdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQjlYRzU5WEc1QWMzVndjRzl5ZEhNZ0tDMTNaV0pyYVhRdFlYQndaV0Z5WVc1alpUcHViMjVsS1h0Y2JtSnZaSGw3WW1GamEyZHliM1Z1WkRwMWNtd29YQ0l1TGk5cGJXY3ZaUzUzWldKd1hDSXBJRzV2TFhKbGNHVmhkQ0JqWlc1MFpYSXZZMjkyWlhKOVhHNTlYRzVjYmlCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ056QXdjSGdwZTF4dVhHNUFjM1Z3Y0c5eWRITWdLQzEzWldKcmFYUXRZWEJ3WldGeVlXNWpaVHB1YjI1bEtYdGNibHh1ZlZ4dVhHNTlYRzRpTENJdWRHbDBiR1VnZTF4dUlDQjBaWGgwTFhSeVlXNXpabTl5YlRvZ2RYQndaWEpqWVhObE8xeHVYRzRnSUVCcGJtTnNkV1JsSUhCb0lIdGNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQnNaV1owTzF4dUlDQjlYRzU5WEc0aUxDSXVibVYzY3lCN1hHNGdJR3hwYzNRdGMzUjViR1U2SUc1dmJtVTdYRzRnSUhCaFpHUnBibWM2SURBN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2dabXhsZUMxemRHRnlkRHRjYmx4dUlDQkFhVzVqYkhWa1pTQndhQ0I3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJSDFjYm4xY2JpSmRmUT09ICovIiwiKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmltZyB7XG4gIG1heC13aWR0aDogNzAwcHg7XG59XG5cbmJvZHkge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtZmFtaWx5OiBHZW9yZ2lhLCBcIlRpbWVzIE5ldyBSb21hblwiLCBUaW1lcywgc2VyaWY7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9lLmpwZ1wiKSBuby1yZXBlYXQgY2VudGVyL2NvdmVyO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KSB7XG4gIGJvZHkge1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG4gIH1cbn1cblxuLnRpdGxlIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3MDBweCkge1xuICAudGl0bGUge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gIH1cbn1cblxuLm5ld3Mge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzAwcHgpIHtcbiAgLm5ld3Mge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcbmJvZHl7YmFja2dyb3VuZDp1cmwoXCIuLi9pbWcvZS53ZWJwXCIpIG5vLXJlcGVhdCBjZW50ZXIvY292ZXJ9XG59XG5cbiBAbWVkaWEgKG1heC13aWR0aDogNzAwcHgpe1xuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcblxufVxuXG59XG4iLCIudGl0bGUge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXG4gIEBpbmNsdWRlIHBoIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB9XG59XG4iLCIubmV3cyB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcblxuICBAaW5jbHVkZSBwaCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cbiJdfQ== */